-- Create 6 new users
INSERT INTO Users (first_name, last_name) VALUES ("Amy", "Giver");
INSERT INTO Users (first_name, last_name) VALUES ("Eli", "Byers");
INSERT INTO Users (first_name, last_name) VALUES ("Marky", "Mark");
INSERT INTO Users (first_name, last_name) VALUES ("Big", "Bird");
INSERT INTO Users (first_name, last_name) VALUES ("Kermit", "Frog");
INSERT INTO Users (first_name, last_name) VALUES ("Ernie", "Banks");

-- Have user 1 be friends with user 2, 4 and 6
INSERT INTO Friendships (user_id, friend_id) VALUES (1, 2);
INSERT INTO Friendships (user_id, friend_id) VALUES (1, 4);
INSERT INTO Friendships (user_id, friend_id) VALUES (1, 6);

-- Have user 2 be friends with user 1, 3 and 5
INSERT INTO Friendships (user_id, friend_id) VALUES (2, 1);
INSERT INTO Friendships (user_id, friend_id) VALUES (2, 3);
INSERT INTO Friendships (user_id, friend_id) VALUES (2, 5);

-- Have user 3 be friends with user 2 and 5
INSERT INTO Friendships (user_id, friend_id) VALUES (3, 2);
INSERT INTO Friendships (user_id, friend_id) VALUES (3, 5);

-- Have user 4 be friends with user 3
INSERT INTO Friendships (user_id, friend_id) VALUES (4, 3);

-- Have user 5 be friends with user 1 and 6
INSERT INTO Friendships (user_id, friend_id) VALUES (5, 1);
INSERT INTO Friendships (user_id, friend_id) VALUES (5, 6);

-- Have user 6 be friends with user 2 and 3
INSERT INTO Friendships (user_id, friend_id) VALUES (6, 2);
INSERT INTO Friendships (user_id, friend_id) VALUES (6, 3);

-- Display the relationships create
SELECT users.first_name, users.last_name, friend.first_name AS "friend_first_name", friend.last_name AS "friend_last_name"
FROM Users JOIN friendships ON users.id = friendships.user_id JOIN users as Friend ON friend.id = friendships.friend_id; 
 
--  Return the count of all friendships
SELECT * FROM Friendships;
SELECT count(id) FROM Friendships;
